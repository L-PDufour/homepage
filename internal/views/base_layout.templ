package views

import (
	"fmt"
	"time"
)

type NavItem struct {
	url   string
	text  string
	color string
	icon  templ.Component
}

var navItems = []NavItem{
	{"/bio", "", "text-[#f5e0dc] hover:bg-[#f5e0dc] hover:text-[#1e1e2e]", homeIcon()},
	{"/cv", "CV", "text-[#cba6f7] hover:bg-[#cba6f7] hover:text-[#1e1e2e]", nil},
	{"/projects", "Projets", "text-[#b4befe] hover:bg-[#b4befe] hover:text-[#1e1e2e]", nil},
	{"/blog", "Blogue", "text-[#a6e3a1] hover:bg-[#a6e3a1] hover:text-[#1e1e2e]", nil},
	{"/kids", "Enfants", "text-[#e78284] hover:bg-[#e78284] hover:text-[#1e1e2e]", nil},
}

type SocialLink struct {
	url   string
	icon  templ.Component
	label string
}

var socialLinks = []SocialLink{
	{"https://github.com/L-PDufour", githubIcon(), "GitHub"},
	{"https://linkedin.com/in/l-pdufour", linkedinIcon(), "LinkedIn"},
}

templ Base() {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<meta name="description" content="Page personnelle de Léon-Pierre Dufour"/>
			<link href="/assets/css/output.css" rel="stylesheet"/>
			<link href="/assets/favicon.ico" rel="icon"/>
			<title>Page personnelle</title>
			<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.9.359/pdf.min.js"></script>
			<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.9.359/pdf.worker.min.js"></script>
			<script src="/assets/js/htmx.min.js" defer></script>
		</head>
		<body class="min-h-screen flex flex-col bg-[#303446] text-[#c6d0f5] font-medium">
			@header()
			<main class="flex-grow flex">
				<div class="mt-4 sm:mt-6 lg:mt-8 mb-4 w-full mx-auto px-4 sm:px-6 lg:px-8">
					<div class="space-y-4">
						@contentStyles()
						{ children... }
					</div>
				</div>
			</main>
			@footer()
		</body>
	</html>
}

templ header() {
	<header data-testid="headerTemplate" class="bg-[#1e1e2e] text-[#cdd6f4] sticky top-0 z-10">
		@navBar()
	</header>
}

templ navBar() {
	<nav data-testid="navTemplate" class="container mx-auto p-4">
		<ul class="flex flex-wrap items-center justify-center gap-2 sm:gap-4">
			for _, item := range navItems {
				<li>
					<a
						hx-get={ item.url }
						hx-target="body"
						hx-push-url="true"
						class={ "flex items-center px-2 py-1 sm:px-3 sm:py-2 rounded transition-colors text-sm sm:text-base " + item.color }
					>
						if item.icon != nil {
							<span class="flex items-center justify-center">
								@item.icon
							</span>
						} else {
							{ item.text }
						}
					</a>
				</li>
			}
		</ul>
	</nav>
}

templ footer() {
	<footer data-testid="footerTemplate" class="bg-[#1e1e2e] text-[#cdd6f4] p-4 text-center">
		<div class="flex justify-center items-center gap-4 mb-2">
			for _, link := range socialLinks {
				<a
					href={ templ.SafeURL(link.url) }
					target="_blank"
					rel="noopener noreferrer"
					class="text-[#f5e0dc] hover:text-[#fab387] transition-colors"
					aria-label={ link.label }
				>
					@link.icon
				</a>
			}
		</div>
		<div class="text-sm sm:text-base">&copy; { fmt.Sprintf("%d", time.Now().Year()) } Léon-Pierre Dufour</div>
	</footer>
}

templ homeIcon() {
	<svg
		xmlns="http://www.w3.org/2000/svg"
		class="h-5 w-5 sm:h-6 sm:w-6"
		viewBox="0 0 24 24"
		fill="none"
		stroke="currentColor"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round"
	>
		<path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
		<polyline points="9 22 9 12 15 12 15 22"></polyline>
	</svg>
}

templ githubIcon() {
	<svg
		xmlns="http://www.w3.org/2000/svg"
		width="20"
		height="20"
		viewBox="0 0 24 24"
		fill="currentColor"
		class="sm:w-6 sm:h-6"
	>
		<path
			d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"
		></path>
	</svg>
}

templ linkedinIcon() {
	<svg
		xmlns="http://www.w3.org/2000/svg"
		width="20"
		height="20"
		viewBox="0 0 24 24"
		fill="currentColor"
		class="sm:w-6 sm:h-6"
	>
		<path
			d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"
		></path>
	</svg>
}

templ contentStyles() {
	<style>
:root {
    --rosewater: #f5e0dc;
    --flamingo: #f2cdcd;
    --pink: #f5c2e7;
    --mauve: #cba6f7;
    --red: #f38ba8;
    --maroon: #eba0ac;
    --peach: #fab387;
    --yellow: #f9e2af;
    --green: #a6e3a1;
    --teal: #94e2d5;
    --sky: #89dceb;
    --sapphire: #74c7ec;
    --blue: #89b4fa;
    --lavender: #b4befe;
    --text: #cdd6f4;
    --subtext1: #bac2de;
    --subtext0: #a6adc8;
    --overlay2: #9399b2;
    --overlay1: #7f849c;
    --overlay0: #6c7086;
    --surface2: #585b70;
    --surface1: #45475a;
    --surface0: #313244;
    --base: #1e1e2e;
    --mantle: #181825;
    --crust: #11111b;
}

.prose {
    color: var(--text);
    padding-left: 0;
    padding-right: 0;
}

.prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    color: var(--flamingo);
    font-weight: bold;
}

.prose p, .prose ul, .prose ol {
    color: var(--text);
}

.prose strong {
    color: var(--red);
    font-weight: bold;
}

.prose em {
    color: var(--mauve);
    font-weight: semibold;
  }
.prose a {
    color: var(--pink);
    text-decoration: underline;
    transition: color 0.3s ease;
}

.prose a:hover {
    color: var(--mauve);
}

.prose blockquote {
    border-left: 4px solid var(--overlay0);
    padding-left: 1rem;
    color: var(--subtext0);
}

.prose code {
    background-color: var(--surface0);
    color: var(--green);
    padding: 0.2em 0.4em;
    border-radius: 3px;
}

.prose pre {
    background-color: var(--surface0);
    padding: 1rem;
    border-radius: 5px;
    overflow-x: auto;
}

.prose img {
    max-width: 100%;
    height: auto;
    border-radius: 5px;
}

.prose hr {
    border: none;
    border-top: 1px solid var(--surface1);
    margin: 2rem 0;
}

.prose table {
    border-collapse: collapse;
    width: 100%;
}

.prose th, .prose td {
    border: 1px solid var(--surface1);
    padding: 0.5rem;
}

.prose th {
    background-color: var(--surface0);
    font-weight: bold;
}
    </style>
}
