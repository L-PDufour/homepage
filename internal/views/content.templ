package views

import (
	"homepage/internal/database"
	"homepage/internal/markdown"
	"strconv"
)

templ UnifiedContentList(contents []database.Content, contentType string, isAdmin bool) {
	<div class="max-w-7xl mx-auto p-4 sm:p-6 bg-[#1e1e2e] rounded-lg shadow-lg">
		<h1 class="text-3xl font-bold text-[#f2cdcd] mb-6">{ contentType }</h1>
		<div id="content-container">
			for _, content := range contents {
				if content.Type == contentType {
					@UnifiedContent(content, isAdmin, false)
				}
			}
		</div>
		if isAdmin {
			<button
				hx-get="/content/new"
				hx-target="#content-form"
				hx-swap="beforeend"
				class="mt-4 bg-blue-500 text-white px-4 py-2 rounded"
			>
				Add New { contentType }
			</button>
			<div id="content-form"></div>
		}
	</div>
}

templ UnifiedContent(content database.Content, isAdmin bool, isEditing bool) {
	<div id={ "content-" + strconv.Itoa(int(content.ID)) }>
		if !isEditing {
			@contentView(content, isAdmin)
		} else {
			@editContentSection(content)
		}
	</div>
}

templ contentView(content database.Content, isAdmin bool) {
	@contentSection(content.Markdown.String)
	if isAdmin {
		<button
			hx-get={ string(templ.SafeURL("/content/edit?id=" + strconv.Itoa(int(content.ID)))) }
			hx-target={ "#content-" + strconv.Itoa(int(content.ID)) }
			hx-swap="outerHTML"
			class="mt-2 bg-blue-500 text-white px-4 py-2 rounded"
		>
			Edit
		</button>
	}
}

templ contentSection(markdownContent string) {
	<div class="prose lg:prose-xl max-w-full mx-auto">
		<style>
            .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
                color: #f2cdcd;
            }
            .prose p, .prose ul, .prose ol {
                color: #cdd6f4;
            }
            .prose strong, .prose a {
                color: #f28fad;
                font-weight: bold;
            }
            .prose {
                padding-left: 0;
                padding-right: 0;
            }
        </style>
		<div class="mt-4">
			if htmlContent, err := markdown.ConvertAndSanitize(markdownContent); err == nil {
				@templ.Raw(htmlContent)
			} else {
				<p>Error rendering content.</p>
			}
		</div>
	</div>
}

templ editContentSection(content database.Content) {
	<form
		id={ "edit-form-" + strconv.Itoa(int(content.ID)) }
		hx-post={ string(templ.SafeURL("/content/update?id=" + strconv.Itoa(int(content.ID)))) }
		hx-target={ "#content-" + strconv.Itoa(int(content.ID)) }
		hx-swap="outerHTML"
	>
		<input type="hidden" name="type" value={ content.Type }/>
		<input type="hidden" name="id" value={ strconv.Itoa(int(content.ID)) }/>
		<input name="title" value={ content.Title } class="w-full p-2 border rounded mb-2"/>
		<textarea name="content" rows="10" class="w-full p-2 border rounded mb-2">
			{ content.Markdown.String }
		</textarea>
		if content.Type == "project" {
			<input type="url" name="link" value={ content.Link.String } placeholder="Project Link" class="w-full p-2 border rounded mb-2"/>
		}
		<input type="url" name="image_url" value={ content.ImageUrl.String } placeholder="Image URL" class="w-full p-2 border rounded mb-2"/>
		<button type="submit" class="mt-2 bg-green-500 text-white px-4 py-2 rounded">
			Save Changes
		</button>
		<button
			type="button"
			hx-get={ string(templ.SafeURL("/content/view?id=" + strconv.Itoa(int(content.ID)))) }
			hx-target={ "#content-" + strconv.Itoa(int(content.ID)) }
			hx-swap="outerHTML"
			class="mt-2 ml-2 bg-red-500 text-white px-4 py-2 rounded"
		>
			Cancel
		</button>
		<button
			type="button"
			hx-delete={ string(templ.SafeURL("/content/delete?id=" + strconv.Itoa(int(content.ID)))) }
			hx-confirm="Are you sure you want to delete this content?"
			hx-on="htmx:afterRequest: window.location.reload()"
			class="mt-2 ml-2 bg-red-500 text-white px-4 py-2 rounded"
		>
			Delete
		</button>
	</form>
}

templ NewContentForm() {
	<form
		hx-post="/content/create"
		hx-target="#content-form"
		hx-swap="innerHTML"
		class="mt-4 p-4 border rounded"
	>
		<select name="type" class="w-full p-2 border rounded mb-2" required>
			<option value="">Select Content Type</option>
			<option value="blog">Blog Post</option>
			<option value="project">Project</option>
			<option value="bio">Bio</option>
		</select>
		<input type="text" name="title" placeholder="Title" class="w-full p-2 border rounded mb-2" required/>
		<textarea name="markdown" rows="10" placeholder="Content" class="w-full p-2 border rounded mb-2" required></textarea>
		<input type="url" name="image_url" placeholder="Image URL" class="w-full p-2 border rounded mb-2"/>
		<input type="url" name="link" placeholder="Link (for projects)" class="w-full p-2 border rounded mb-2"/>
		<button type="submit" class="mt-2 bg-green-500 text-white px-4 py-2 rounded">
			Submit
		</button>
	</form>
}

templ NewContentButton(contentType string) {
	<button
		hx-get={ "/content/new?type=" + contentType }
		hx-target="#content-form"
		hx-swap="beforeend"
		class="mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
	>
		Add New { contentType }
	</button>
	<div id="content-form"></div>
}
