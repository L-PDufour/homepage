package views

import (
	"homepage/internal/database"
	"homepage/internal/utils"
	"strconv"
	"homepage/internal/models"
)

templ UnifiedContentView(props models.ContentViewProps) {
	@Base() {
		@unifiedContentList(props)
	}
}

templ UnifiedContent(props models.ContentItemProps) {
	<div id={ "content-" + strconv.Itoa(int(props.Content.ID)) } class="w-full">
		if !props.IsEditing {
			@contentView(props)
		} else {
			@editContentSection(props.Content)
		}
	</div>
}

templ FullContentSection(content database.Content) {
	<div id={ "content-wrapper-" + strconv.Itoa(int(content.ID)) } class="prose lg:prose-xl max-w-full mx-auto">
		<div class="mt-4">
			if htmlContent, err := utils.GetHTMLContent(content.Markdown.String); err == nil {
				@templ.Raw(htmlContent)
			} else {
				<p>Error rendering content.</p>
			}
		</div>
		if content.ContentType != "bio" {
			<button
				class="read-more-btn inline-block px-3 py-1 rounded text-sm transition-colors duration-200 mt-4"
				hx-get={ "/content/truncated?id=" + strconv.Itoa(int(content.ID)) }
				hx-target={ "#content-wrapper-" + strconv.Itoa(int(content.ID)) }
				hx-swap="innerHTML"
				hx-trigger="click"
			>
				Réduire
			</button>
		}
	</div>
}

templ ContentSection(content database.Content) {
	<div id={ "content-wrapper-" + strconv.Itoa(int(content.ID)) } class="prose lg:prose-xl max-w-full mx-auto">
		<div class="mt-4">
			if htmlContent, err := utils.GetHTMLContent(content.Markdown.String); err == nil {
				if content.ContentType == "bio" {
					@templ.Raw(htmlContent)
				} else {
					@templ.Raw(utils.TruncateMarkdown(htmlContent, 200))
				}
			} else {
				<p>Des pépins techniques sont apparues.</p>
			}
		</div>
		if content.ContentType != "bio" {
			<button
				class="read-more-btn inline-block px-3 py-1 rounded text-sm transition-colors duration-200 mt-4"
				hx-get={ "/content/full?id=" + strconv.Itoa(int(content.ID)) }
				hx-target={ "#content-wrapper-" + strconv.Itoa(int(content.ID)) }
				hx-swap="innerHTML"
				hx-trigger="click"
			>
				En savoir davantage
			</button>
		}
	</div>
}

templ NewContentForm() {
	<form
		hx-post="/content/create"
		hx-target="#content-form"
		hx-swap="innerHTML"
		class="mt-4 p-4 border rounded"
	>
		<select name="type" class="w-full p-2 border rounded mb-2" required>
			<option value="">Select Content Type</option>
			<option value="blog">Blog Post</option>
			<option value="project">Project</option>
			<option value="bio">Bio</option>
		</select>
		<input type="text" name="title" placeholder="Title" class="w-full p-2 border rounded mb-2" required/>
		<textarea name="markdown" rows="10" placeholder="Content" class="w-full p-2 border rounded mb-2" required></textarea>
		<input type="url" name="image_url" placeholder="Image URL" class="w-full p-2 border rounded mb-2"/>
		<input type="url" name="link" placeholder="Link (for projects)" class="w-full p-2 border rounded mb-2"/>
		<button type="submit" class="mt-2 bg-green-500 text-white px-4 py-2 rounded">Submit</button>
	</form>
}
