package views

import (
	"homepage/internal/database"
	"strconv"
	"homepage/internal/models"
)

templ recentPosts(contents []database.Content) {
	<ul class="space-y-2">
		for _, content := range contents[:min(5, len(contents))] {
			if content.ContentType == database.ContentTypeBlog {
				<li>
					<a
						href="#"
						hx-get={ "/content/view?id=" + strconv.Itoa(int(content.ID)) }
						hx-target="#content"
						hx-swap="innerHTML"
						class="text-blue-400 hover:text-blue-300"
					>
						{ content.Title }
					</a>
				</li>
			}
		}
	</ul>
}

templ unifiedContentList(props models.ContentViewProps) {
	<div class="max-w-10xl mx-auto px-4 sm:px-6 lg:px-8">
		<div class="flex flex-col lg:flex-row justify-center">
			<div class="lg:w-4/5 w-full max-w-10xl">
				<div class="bg-[#414559] rounded-lg shadow-lg overflow-hidden">
					<div id="content-container" class="p-4 sm:p-6 space-y-4">
						for _, content := range props.Contents {
							if content.ContentType == props.ContentType {
								@UnifiedContent(models.ContentItemProps{Content: content, IsAdmin: props.IsAdmin, IsEditing: props.IsEditing})
							}
						}
					</div>
					if props.IsAdmin {
						<div class="mt-4 text-center">
							@newContentButton(props.ContentType)
						</div>
					}
				</div>
			</div>
			if props.ContentType == database.ContentTypeBlog {
				<div class="lg:w-1/5 w-full lg:pl-4 mt-8 lg:mt-0 lg:max-w-xs">
					<div class="bg-[#313244] p-4 rounded-lg sticky top-4">
						<h2 class="text-xl font-semibold mb-4 text-[#f2cdcd]">Recent Posts</h2>
						@recentPosts(props.Contents)
					</div>
				</div>
			}
		</div>
	</div>
}

templ contentView(props models.ContentItemProps) {
	<div class="w-full mx-auto rounded-lg overflow-hidden bg-[#1e1e2e] shadow-md">
		<div class="p-4">
			@ContentSection(props.Content)
		</div>
		if props.IsAdmin {
			<div class="p-4 text-center">
				<button
					hx-get={ "/content/edit?id=" + strconv.Itoa(int(props.Content.ID)) }
					hx-target={ "#content-" + strconv.Itoa(int(props.Content.ID)) }
					hx-swap="outerHTML"
					class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
				>
					Edit
				</button>
			</div>
		}
	</div>
}

templ editContentSection(content database.Content) {
	<form
		id={ "edit-form-" + strconv.Itoa(int(content.ID)) }
		hx-post={ "/content/update?id=" + strconv.Itoa(int(content.ID)) }
		hx-target={ "#content-" + strconv.Itoa(int(content.ID)) }
		hx-swap="outerHTML"
	>
		<input type="hidden" name="type" value={ string(content.ContentType) }/>
		<input type="hidden" name="id" value={ strconv.Itoa(int(content.ID)) }/>
		<input name="title" value={ content.Title } class="w-full p-2 border rounded mb-2"/>
		<textarea name="content" rows="10" class="w-full p-2 border rounded mb-2">{ content.Markdown.String }</textarea>
		if content.ContentType == database.ContentTypeProject {
			<input type="url" name="link" value={ content.Link.String } placeholder="Project Link" class="w-full p-2 border rounded mb-2"/>
		}
		<input type="url" name="image_url" value={ content.ImageUrl.String } placeholder="Image URL" class="w-full p-2 border rounded mb-2"/>
		@editButtons(content.ID)
	</form>
}

templ editButtons(contentID int32) {
	<button type="submit" class="mt-2 bg-green-500 text-white px-4 py-2 rounded">Save Changes</button>
	<button
		type="button"
		hx-get={ "/content/view?id=" + strconv.Itoa(int(contentID)) }
		hx-target={ "#content-" + strconv.Itoa(int(contentID)) }
		hx-swap="outerHTML"
		class="mt-2 ml-2 bg-red-500 text-white px-4 py-2 rounded"
	>Cancel</button>
	<button
		type="button"
		hx-delete={ "/content/delete?id=" + strconv.Itoa(int(contentID)) }
		hx-confirm="Are you sure you want to delete this content?"
		hx-on="htmx:afterRequest: window.location.reload()"
		class="mt-2 ml-2 bg-red-500 text-white px-4 py-2 rounded"
	>Delete</button>
}

templ newContentButton(contentType database.ContentType) {
	<button
		hx-get={ "/content/new?type=" + string(contentType) }
		hx-target="#content-form"
		hx-swap="beforeend"
		class="mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
	>
		Add New { string(contentType) }
	</button>
	<div id="content-form"></div>
}
